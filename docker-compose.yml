---
volumes:

  project-root-volume:
    driver: local
    driver_opts:
      type: none
      device: .
      o: bind


services:

  cleanup:
    container_name: ${COMPOSE_PROJECT_NAME}-cleanup
    image: alpine:latest
    volumes: &volumes
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
      - project-root-volume:/workspaces/vm-ubuntu
    working_dir: &default-workdir /workspaces/vm-ubuntu
    command: |
      rm -rf target
      rm -rf target/docs/site
    tty: &tty true

  lint-yaml:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-yaml
    image: cytopia/yamllint:latest
    volumes: *volumes
    working_dir: *default-workdir
    command: .
    tty: *tty

  lint-workflows:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-workflows
    image: rhysd/actionlint:latest
    volumes: *volumes
    working_dir: *default-workdir
    command: -color
    tty: *tty

  lint-filenames:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-filenames
    image: lslintorg/ls-lint:1.11.2
    volumes: *volumes
    working_dir: *default-workdir
    tty: *tty

  lint-folders:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-folders
    image: sommerfeldio/folderslint:latest
    volumes: *volumes
    working_dir: *default-workdir
    command: .
    tty: *tty

  lint-inspec-profile:
    container_name: ${COMPOSE_PROJECT_NAME}-lint-inspec-profile
    image: chef/inspec:5.22.36
    volumes: *volumes
    working_dir: *default-workdir
    command: check components/test-compliance/vm-ubuntu --chef-license=accept-no-persist
    tty: *tty

  # https://hub.docker.com/r/yuzutech/kroki
  kroki:
    container_name: ${COMPOSE_PROJECT_NAME}-kroki
    image: yuzutech/kroki:0.25.0
    ports:
      - 3888:8000
    healthcheck:
      test: curl --fail http://localhost:8000 || exit 1
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 20s

  docs-build:
    container_name: ${COMPOSE_PROJECT_NAME}-docs-build
    image: &docs-image sommerfeldio/mkdocs:latest
    volumes: *volumes
    working_dir: *default-workdir
    command: build
    tty: *tty
    depends_on:
      kroki:
        condition: service_healthy
      cleanup:
        condition: service_completed_successfully

  docs-dev-server:
    container_name: ${COMPOSE_PROJECT_NAME}-docs-dev-server
    image: *docs-image
    volumes: *volumes
    working_dir: *default-workdir
    ports:
      - 3080:8000
    tty: *tty
    depends_on:
      kroki:
        condition: service_healthy
